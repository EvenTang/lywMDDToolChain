// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SystemCtrlMessageDef.proto

#ifndef PROTOBUF_SystemCtrlMessageDef_2eproto__INCLUDED
#define PROTOBUF_SystemCtrlMessageDef_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class PowerOffResult;
class PowerOffResultDefaultTypeInternal;
extern PowerOffResultDefaultTypeInternal _PowerOffResult_default_instance_;
class PowerOnResult;
class PowerOnResultDefaultTypeInternal;
extern PowerOnResultDefaultTypeInternal _PowerOnResult_default_instance_;
class SetTemperature;
class SetTemperatureDefaultTypeInternal;
extern SetTemperatureDefaultTypeInternal _SetTemperature_default_instance_;
class SetTemperatureResult;
class SetTemperatureResultDefaultTypeInternal;
extern SetTemperatureResultDefaultTypeInternal _SetTemperatureResult_default_instance_;
class ShowTemperatureResult;
class ShowTemperatureResultDefaultTypeInternal;
extern ShowTemperatureResultDefaultTypeInternal _ShowTemperatureResult_default_instance_;
class SystemCtrlMessagge;
class SystemCtrlMessaggeDefaultTypeInternal;
extern SystemCtrlMessaggeDefaultTypeInternal _SystemCtrlMessagge_default_instance_;
class TurnOffDisplayResult;
class TurnOffDisplayResultDefaultTypeInternal;
extern TurnOffDisplayResultDefaultTypeInternal _TurnOffDisplayResult_default_instance_;

namespace protobuf_SystemCtrlMessageDef_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_SystemCtrlMessageDef_2eproto

enum SetTemperatureResult_Result {
  SetTemperatureResult_Result_OK = 0,
  SetTemperatureResult_Result_Failed = 1
};
bool SetTemperatureResult_Result_IsValid(int value);
const SetTemperatureResult_Result SetTemperatureResult_Result_Result_MIN = SetTemperatureResult_Result_OK;
const SetTemperatureResult_Result SetTemperatureResult_Result_Result_MAX = SetTemperatureResult_Result_Failed;
const int SetTemperatureResult_Result_Result_ARRAYSIZE = SetTemperatureResult_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetTemperatureResult_Result_descriptor();
inline const ::std::string& SetTemperatureResult_Result_Name(SetTemperatureResult_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetTemperatureResult_Result_descriptor(), value);
}
inline bool SetTemperatureResult_Result_Parse(
    const ::std::string& name, SetTemperatureResult_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetTemperatureResult_Result>(
    SetTemperatureResult_Result_descriptor(), name, value);
}
enum ShowTemperatureResult_Result {
  ShowTemperatureResult_Result_OK = 0,
  ShowTemperatureResult_Result_Failed = 1
};
bool ShowTemperatureResult_Result_IsValid(int value);
const ShowTemperatureResult_Result ShowTemperatureResult_Result_Result_MIN = ShowTemperatureResult_Result_OK;
const ShowTemperatureResult_Result ShowTemperatureResult_Result_Result_MAX = ShowTemperatureResult_Result_Failed;
const int ShowTemperatureResult_Result_Result_ARRAYSIZE = ShowTemperatureResult_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* ShowTemperatureResult_Result_descriptor();
inline const ::std::string& ShowTemperatureResult_Result_Name(ShowTemperatureResult_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    ShowTemperatureResult_Result_descriptor(), value);
}
inline bool ShowTemperatureResult_Result_Parse(
    const ::std::string& name, ShowTemperatureResult_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ShowTemperatureResult_Result>(
    ShowTemperatureResult_Result_descriptor(), name, value);
}
enum PowerOffResult_Result {
  PowerOffResult_Result_OK = 0,
  PowerOffResult_Result_Failed = 1
};
bool PowerOffResult_Result_IsValid(int value);
const PowerOffResult_Result PowerOffResult_Result_Result_MIN = PowerOffResult_Result_OK;
const PowerOffResult_Result PowerOffResult_Result_Result_MAX = PowerOffResult_Result_Failed;
const int PowerOffResult_Result_Result_ARRAYSIZE = PowerOffResult_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* PowerOffResult_Result_descriptor();
inline const ::std::string& PowerOffResult_Result_Name(PowerOffResult_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    PowerOffResult_Result_descriptor(), value);
}
inline bool PowerOffResult_Result_Parse(
    const ::std::string& name, PowerOffResult_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PowerOffResult_Result>(
    PowerOffResult_Result_descriptor(), name, value);
}
enum TurnOffDisplayResult_Result {
  TurnOffDisplayResult_Result_OK = 0,
  TurnOffDisplayResult_Result_Failed = 1
};
bool TurnOffDisplayResult_Result_IsValid(int value);
const TurnOffDisplayResult_Result TurnOffDisplayResult_Result_Result_MIN = TurnOffDisplayResult_Result_OK;
const TurnOffDisplayResult_Result TurnOffDisplayResult_Result_Result_MAX = TurnOffDisplayResult_Result_Failed;
const int TurnOffDisplayResult_Result_Result_ARRAYSIZE = TurnOffDisplayResult_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* TurnOffDisplayResult_Result_descriptor();
inline const ::std::string& TurnOffDisplayResult_Result_Name(TurnOffDisplayResult_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    TurnOffDisplayResult_Result_descriptor(), value);
}
inline bool TurnOffDisplayResult_Result_Parse(
    const ::std::string& name, TurnOffDisplayResult_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TurnOffDisplayResult_Result>(
    TurnOffDisplayResult_Result_descriptor(), name, value);
}
enum PowerOnResult_Result {
  PowerOnResult_Result_OK = 0,
  PowerOnResult_Result_Failed = 1
};
bool PowerOnResult_Result_IsValid(int value);
const PowerOnResult_Result PowerOnResult_Result_Result_MIN = PowerOnResult_Result_OK;
const PowerOnResult_Result PowerOnResult_Result_Result_MAX = PowerOnResult_Result_Failed;
const int PowerOnResult_Result_Result_ARRAYSIZE = PowerOnResult_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* PowerOnResult_Result_descriptor();
inline const ::std::string& PowerOnResult_Result_Name(PowerOnResult_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    PowerOnResult_Result_descriptor(), value);
}
inline bool PowerOnResult_Result_Parse(
    const ::std::string& name, PowerOnResult_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PowerOnResult_Result>(
    PowerOnResult_Result_descriptor(), name, value);
}
// ===================================================================

class SetTemperature : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetTemperature) */ {
 public:
  SetTemperature();
  virtual ~SetTemperature();

  SetTemperature(const SetTemperature& from);

  inline SetTemperature& operator=(const SetTemperature& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetTemperature(SetTemperature&& from) noexcept
    : SetTemperature() {
    *this = ::std::move(from);
  }

  inline SetTemperature& operator=(SetTemperature&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetTemperature& default_instance();

  static inline const SetTemperature* internal_default_instance() {
    return reinterpret_cast<const SetTemperature*>(
               &_SetTemperature_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SetTemperature* other);
  friend void swap(SetTemperature& a, SetTemperature& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetTemperature* New() const PROTOBUF_FINAL { return New(NULL); }

  SetTemperature* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetTemperature& from);
  void MergeFrom(const SetTemperature& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetTemperature* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 new_temp = 1;
  bool has_new_temp() const;
  void clear_new_temp();
  static const int kNewTempFieldNumber = 1;
  ::google::protobuf::int32 new_temp() const;
  void set_new_temp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SetTemperature)
 private:
  void set_has_new_temp();
  void clear_has_new_temp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 new_temp_;
  friend struct protobuf_SystemCtrlMessageDef_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetTemperatureResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetTemperatureResult) */ {
 public:
  SetTemperatureResult();
  virtual ~SetTemperatureResult();

  SetTemperatureResult(const SetTemperatureResult& from);

  inline SetTemperatureResult& operator=(const SetTemperatureResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetTemperatureResult(SetTemperatureResult&& from) noexcept
    : SetTemperatureResult() {
    *this = ::std::move(from);
  }

  inline SetTemperatureResult& operator=(SetTemperatureResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetTemperatureResult& default_instance();

  static inline const SetTemperatureResult* internal_default_instance() {
    return reinterpret_cast<const SetTemperatureResult*>(
               &_SetTemperatureResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SetTemperatureResult* other);
  friend void swap(SetTemperatureResult& a, SetTemperatureResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetTemperatureResult* New() const PROTOBUF_FINAL { return New(NULL); }

  SetTemperatureResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetTemperatureResult& from);
  void MergeFrom(const SetTemperatureResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetTemperatureResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SetTemperatureResult_Result Result;
  static const Result OK =
    SetTemperatureResult_Result_OK;
  static const Result Failed =
    SetTemperatureResult_Result_Failed;
  static inline bool Result_IsValid(int value) {
    return SetTemperatureResult_Result_IsValid(value);
  }
  static const Result Result_MIN =
    SetTemperatureResult_Result_Result_MIN;
  static const Result Result_MAX =
    SetTemperatureResult_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    SetTemperatureResult_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return SetTemperatureResult_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return SetTemperatureResult_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return SetTemperatureResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .SetTemperatureResult.Result result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::SetTemperatureResult_Result result() const;
  void set_result(::SetTemperatureResult_Result value);

  // @@protoc_insertion_point(class_scope:SetTemperatureResult)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int result_;
  friend struct protobuf_SystemCtrlMessageDef_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShowTemperatureResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ShowTemperatureResult) */ {
 public:
  ShowTemperatureResult();
  virtual ~ShowTemperatureResult();

  ShowTemperatureResult(const ShowTemperatureResult& from);

  inline ShowTemperatureResult& operator=(const ShowTemperatureResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShowTemperatureResult(ShowTemperatureResult&& from) noexcept
    : ShowTemperatureResult() {
    *this = ::std::move(from);
  }

  inline ShowTemperatureResult& operator=(ShowTemperatureResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShowTemperatureResult& default_instance();

  static inline const ShowTemperatureResult* internal_default_instance() {
    return reinterpret_cast<const ShowTemperatureResult*>(
               &_ShowTemperatureResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ShowTemperatureResult* other);
  friend void swap(ShowTemperatureResult& a, ShowTemperatureResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShowTemperatureResult* New() const PROTOBUF_FINAL { return New(NULL); }

  ShowTemperatureResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShowTemperatureResult& from);
  void MergeFrom(const ShowTemperatureResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShowTemperatureResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ShowTemperatureResult_Result Result;
  static const Result OK =
    ShowTemperatureResult_Result_OK;
  static const Result Failed =
    ShowTemperatureResult_Result_Failed;
  static inline bool Result_IsValid(int value) {
    return ShowTemperatureResult_Result_IsValid(value);
  }
  static const Result Result_MIN =
    ShowTemperatureResult_Result_Result_MIN;
  static const Result Result_MAX =
    ShowTemperatureResult_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    ShowTemperatureResult_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return ShowTemperatureResult_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return ShowTemperatureResult_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return ShowTemperatureResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .ShowTemperatureResult.Result result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::ShowTemperatureResult_Result result() const;
  void set_result(::ShowTemperatureResult_Result value);

  // @@protoc_insertion_point(class_scope:ShowTemperatureResult)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int result_;
  friend struct protobuf_SystemCtrlMessageDef_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PowerOffResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PowerOffResult) */ {
 public:
  PowerOffResult();
  virtual ~PowerOffResult();

  PowerOffResult(const PowerOffResult& from);

  inline PowerOffResult& operator=(const PowerOffResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PowerOffResult(PowerOffResult&& from) noexcept
    : PowerOffResult() {
    *this = ::std::move(from);
  }

  inline PowerOffResult& operator=(PowerOffResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PowerOffResult& default_instance();

  static inline const PowerOffResult* internal_default_instance() {
    return reinterpret_cast<const PowerOffResult*>(
               &_PowerOffResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(PowerOffResult* other);
  friend void swap(PowerOffResult& a, PowerOffResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PowerOffResult* New() const PROTOBUF_FINAL { return New(NULL); }

  PowerOffResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PowerOffResult& from);
  void MergeFrom(const PowerOffResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PowerOffResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PowerOffResult_Result Result;
  static const Result OK =
    PowerOffResult_Result_OK;
  static const Result Failed =
    PowerOffResult_Result_Failed;
  static inline bool Result_IsValid(int value) {
    return PowerOffResult_Result_IsValid(value);
  }
  static const Result Result_MIN =
    PowerOffResult_Result_Result_MIN;
  static const Result Result_MAX =
    PowerOffResult_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    PowerOffResult_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return PowerOffResult_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return PowerOffResult_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return PowerOffResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .PowerOffResult.Result result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::PowerOffResult_Result result() const;
  void set_result(::PowerOffResult_Result value);

  // @@protoc_insertion_point(class_scope:PowerOffResult)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int result_;
  friend struct protobuf_SystemCtrlMessageDef_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TurnOffDisplayResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TurnOffDisplayResult) */ {
 public:
  TurnOffDisplayResult();
  virtual ~TurnOffDisplayResult();

  TurnOffDisplayResult(const TurnOffDisplayResult& from);

  inline TurnOffDisplayResult& operator=(const TurnOffDisplayResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TurnOffDisplayResult(TurnOffDisplayResult&& from) noexcept
    : TurnOffDisplayResult() {
    *this = ::std::move(from);
  }

  inline TurnOffDisplayResult& operator=(TurnOffDisplayResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnOffDisplayResult& default_instance();

  static inline const TurnOffDisplayResult* internal_default_instance() {
    return reinterpret_cast<const TurnOffDisplayResult*>(
               &_TurnOffDisplayResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(TurnOffDisplayResult* other);
  friend void swap(TurnOffDisplayResult& a, TurnOffDisplayResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TurnOffDisplayResult* New() const PROTOBUF_FINAL { return New(NULL); }

  TurnOffDisplayResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TurnOffDisplayResult& from);
  void MergeFrom(const TurnOffDisplayResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TurnOffDisplayResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TurnOffDisplayResult_Result Result;
  static const Result OK =
    TurnOffDisplayResult_Result_OK;
  static const Result Failed =
    TurnOffDisplayResult_Result_Failed;
  static inline bool Result_IsValid(int value) {
    return TurnOffDisplayResult_Result_IsValid(value);
  }
  static const Result Result_MIN =
    TurnOffDisplayResult_Result_Result_MIN;
  static const Result Result_MAX =
    TurnOffDisplayResult_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    TurnOffDisplayResult_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return TurnOffDisplayResult_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return TurnOffDisplayResult_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return TurnOffDisplayResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .TurnOffDisplayResult.Result result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::TurnOffDisplayResult_Result result() const;
  void set_result(::TurnOffDisplayResult_Result value);

  // @@protoc_insertion_point(class_scope:TurnOffDisplayResult)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int result_;
  friend struct protobuf_SystemCtrlMessageDef_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PowerOnResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PowerOnResult) */ {
 public:
  PowerOnResult();
  virtual ~PowerOnResult();

  PowerOnResult(const PowerOnResult& from);

  inline PowerOnResult& operator=(const PowerOnResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PowerOnResult(PowerOnResult&& from) noexcept
    : PowerOnResult() {
    *this = ::std::move(from);
  }

  inline PowerOnResult& operator=(PowerOnResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PowerOnResult& default_instance();

  static inline const PowerOnResult* internal_default_instance() {
    return reinterpret_cast<const PowerOnResult*>(
               &_PowerOnResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(PowerOnResult* other);
  friend void swap(PowerOnResult& a, PowerOnResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PowerOnResult* New() const PROTOBUF_FINAL { return New(NULL); }

  PowerOnResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PowerOnResult& from);
  void MergeFrom(const PowerOnResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PowerOnResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PowerOnResult_Result Result;
  static const Result OK =
    PowerOnResult_Result_OK;
  static const Result Failed =
    PowerOnResult_Result_Failed;
  static inline bool Result_IsValid(int value) {
    return PowerOnResult_Result_IsValid(value);
  }
  static const Result Result_MIN =
    PowerOnResult_Result_Result_MIN;
  static const Result Result_MAX =
    PowerOnResult_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    PowerOnResult_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return PowerOnResult_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return PowerOnResult_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return PowerOnResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .PowerOnResult.Result result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::PowerOnResult_Result result() const;
  void set_result(::PowerOnResult_Result value);

  // @@protoc_insertion_point(class_scope:PowerOnResult)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int result_;
  friend struct protobuf_SystemCtrlMessageDef_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SystemCtrlMessagge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SystemCtrlMessagge) */ {
 public:
  SystemCtrlMessagge();
  virtual ~SystemCtrlMessagge();

  SystemCtrlMessagge(const SystemCtrlMessagge& from);

  inline SystemCtrlMessagge& operator=(const SystemCtrlMessagge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SystemCtrlMessagge(SystemCtrlMessagge&& from) noexcept
    : SystemCtrlMessagge() {
    *this = ::std::move(from);
  }

  inline SystemCtrlMessagge& operator=(SystemCtrlMessagge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemCtrlMessagge& default_instance();

  enum MsgBodyCase {
    kMsgSetTemperature = 2,
    kMsgSetTemperatureResult = 3,
    kMsgShowTemperatureResult = 4,
    kMsgPowerOffResult = 5,
    kMsgTurnOffDisplayResult = 6,
    kMsgPowerOnResult = 7,
    MSG_BODY_NOT_SET = 0,
  };

  static inline const SystemCtrlMessagge* internal_default_instance() {
    return reinterpret_cast<const SystemCtrlMessagge*>(
               &_SystemCtrlMessagge_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(SystemCtrlMessagge* other);
  friend void swap(SystemCtrlMessagge& a, SystemCtrlMessagge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SystemCtrlMessagge* New() const PROTOBUF_FINAL { return New(NULL); }

  SystemCtrlMessagge* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SystemCtrlMessagge& from);
  void MergeFrom(const SystemCtrlMessagge& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SystemCtrlMessagge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 message_id = 1;
  bool has_message_id() const;
  void clear_message_id();
  static const int kMessageIdFieldNumber = 1;
  ::google::protobuf::int32 message_id() const;
  void set_message_id(::google::protobuf::int32 value);

  // optional .SetTemperature msg_set_temperature = 2;
  bool has_msg_set_temperature() const;
  void clear_msg_set_temperature();
  static const int kMsgSetTemperatureFieldNumber = 2;
  const ::SetTemperature& msg_set_temperature() const;
  ::SetTemperature* mutable_msg_set_temperature();
  ::SetTemperature* release_msg_set_temperature();
  void set_allocated_msg_set_temperature(::SetTemperature* msg_set_temperature);

  // optional .SetTemperatureResult msg_set_temperature_result = 3;
  bool has_msg_set_temperature_result() const;
  void clear_msg_set_temperature_result();
  static const int kMsgSetTemperatureResultFieldNumber = 3;
  const ::SetTemperatureResult& msg_set_temperature_result() const;
  ::SetTemperatureResult* mutable_msg_set_temperature_result();
  ::SetTemperatureResult* release_msg_set_temperature_result();
  void set_allocated_msg_set_temperature_result(::SetTemperatureResult* msg_set_temperature_result);

  // optional .ShowTemperatureResult msg_show_temperature_result = 4;
  bool has_msg_show_temperature_result() const;
  void clear_msg_show_temperature_result();
  static const int kMsgShowTemperatureResultFieldNumber = 4;
  const ::ShowTemperatureResult& msg_show_temperature_result() const;
  ::ShowTemperatureResult* mutable_msg_show_temperature_result();
  ::ShowTemperatureResult* release_msg_show_temperature_result();
  void set_allocated_msg_show_temperature_result(::ShowTemperatureResult* msg_show_temperature_result);

  // optional .PowerOffResult msg_power_off_result = 5;
  bool has_msg_power_off_result() const;
  void clear_msg_power_off_result();
  static const int kMsgPowerOffResultFieldNumber = 5;
  const ::PowerOffResult& msg_power_off_result() const;
  ::PowerOffResult* mutable_msg_power_off_result();
  ::PowerOffResult* release_msg_power_off_result();
  void set_allocated_msg_power_off_result(::PowerOffResult* msg_power_off_result);

  // optional .TurnOffDisplayResult msg_turn_off_display_result = 6;
  bool has_msg_turn_off_display_result() const;
  void clear_msg_turn_off_display_result();
  static const int kMsgTurnOffDisplayResultFieldNumber = 6;
  const ::TurnOffDisplayResult& msg_turn_off_display_result() const;
  ::TurnOffDisplayResult* mutable_msg_turn_off_display_result();
  ::TurnOffDisplayResult* release_msg_turn_off_display_result();
  void set_allocated_msg_turn_off_display_result(::TurnOffDisplayResult* msg_turn_off_display_result);

  // optional .PowerOnResult msg_power_on_result = 7;
  bool has_msg_power_on_result() const;
  void clear_msg_power_on_result();
  static const int kMsgPowerOnResultFieldNumber = 7;
  const ::PowerOnResult& msg_power_on_result() const;
  ::PowerOnResult* mutable_msg_power_on_result();
  ::PowerOnResult* release_msg_power_on_result();
  void set_allocated_msg_power_on_result(::PowerOnResult* msg_power_on_result);

  MsgBodyCase msg_body_case() const;
  // @@protoc_insertion_point(class_scope:SystemCtrlMessagge)
 private:
  void set_has_message_id();
  void clear_has_message_id();
  void set_has_msg_set_temperature();
  void set_has_msg_set_temperature_result();
  void set_has_msg_show_temperature_result();
  void set_has_msg_power_off_result();
  void set_has_msg_turn_off_display_result();
  void set_has_msg_power_on_result();

  inline bool has_msg_body() const;
  void clear_msg_body();
  inline void clear_has_msg_body();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 message_id_;
  union MsgBodyUnion {
    MsgBodyUnion() {}
    ::SetTemperature* msg_set_temperature_;
    ::SetTemperatureResult* msg_set_temperature_result_;
    ::ShowTemperatureResult* msg_show_temperature_result_;
    ::PowerOffResult* msg_power_off_result_;
    ::TurnOffDisplayResult* msg_turn_off_display_result_;
    ::PowerOnResult* msg_power_on_result_;
  } msg_body_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_SystemCtrlMessageDef_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SetTemperature

// optional int32 new_temp = 1;
inline bool SetTemperature::has_new_temp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetTemperature::set_has_new_temp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetTemperature::clear_has_new_temp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetTemperature::clear_new_temp() {
  new_temp_ = 0;
  clear_has_new_temp();
}
inline ::google::protobuf::int32 SetTemperature::new_temp() const {
  // @@protoc_insertion_point(field_get:SetTemperature.new_temp)
  return new_temp_;
}
inline void SetTemperature::set_new_temp(::google::protobuf::int32 value) {
  set_has_new_temp();
  new_temp_ = value;
  // @@protoc_insertion_point(field_set:SetTemperature.new_temp)
}

// -------------------------------------------------------------------

// SetTemperatureResult

// optional .SetTemperatureResult.Result result = 1;
inline bool SetTemperatureResult::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetTemperatureResult::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetTemperatureResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetTemperatureResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::SetTemperatureResult_Result SetTemperatureResult::result() const {
  // @@protoc_insertion_point(field_get:SetTemperatureResult.result)
  return static_cast< ::SetTemperatureResult_Result >(result_);
}
inline void SetTemperatureResult::set_result(::SetTemperatureResult_Result value) {
  assert(::SetTemperatureResult_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:SetTemperatureResult.result)
}

// -------------------------------------------------------------------

// ShowTemperatureResult

// optional .ShowTemperatureResult.Result result = 1;
inline bool ShowTemperatureResult::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShowTemperatureResult::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShowTemperatureResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShowTemperatureResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::ShowTemperatureResult_Result ShowTemperatureResult::result() const {
  // @@protoc_insertion_point(field_get:ShowTemperatureResult.result)
  return static_cast< ::ShowTemperatureResult_Result >(result_);
}
inline void ShowTemperatureResult::set_result(::ShowTemperatureResult_Result value) {
  assert(::ShowTemperatureResult_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:ShowTemperatureResult.result)
}

// -------------------------------------------------------------------

// PowerOffResult

// optional .PowerOffResult.Result result = 1;
inline bool PowerOffResult::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PowerOffResult::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PowerOffResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PowerOffResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::PowerOffResult_Result PowerOffResult::result() const {
  // @@protoc_insertion_point(field_get:PowerOffResult.result)
  return static_cast< ::PowerOffResult_Result >(result_);
}
inline void PowerOffResult::set_result(::PowerOffResult_Result value) {
  assert(::PowerOffResult_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:PowerOffResult.result)
}

// -------------------------------------------------------------------

// TurnOffDisplayResult

// optional .TurnOffDisplayResult.Result result = 1;
inline bool TurnOffDisplayResult::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnOffDisplayResult::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnOffDisplayResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnOffDisplayResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::TurnOffDisplayResult_Result TurnOffDisplayResult::result() const {
  // @@protoc_insertion_point(field_get:TurnOffDisplayResult.result)
  return static_cast< ::TurnOffDisplayResult_Result >(result_);
}
inline void TurnOffDisplayResult::set_result(::TurnOffDisplayResult_Result value) {
  assert(::TurnOffDisplayResult_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:TurnOffDisplayResult.result)
}

// -------------------------------------------------------------------

// PowerOnResult

// optional .PowerOnResult.Result result = 1;
inline bool PowerOnResult::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PowerOnResult::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PowerOnResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PowerOnResult::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::PowerOnResult_Result PowerOnResult::result() const {
  // @@protoc_insertion_point(field_get:PowerOnResult.result)
  return static_cast< ::PowerOnResult_Result >(result_);
}
inline void PowerOnResult::set_result(::PowerOnResult_Result value) {
  assert(::PowerOnResult_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:PowerOnResult.result)
}

// -------------------------------------------------------------------

// SystemCtrlMessagge

// required int32 message_id = 1;
inline bool SystemCtrlMessagge::has_message_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemCtrlMessagge::set_has_message_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SystemCtrlMessagge::clear_has_message_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SystemCtrlMessagge::clear_message_id() {
  message_id_ = 0;
  clear_has_message_id();
}
inline ::google::protobuf::int32 SystemCtrlMessagge::message_id() const {
  // @@protoc_insertion_point(field_get:SystemCtrlMessagge.message_id)
  return message_id_;
}
inline void SystemCtrlMessagge::set_message_id(::google::protobuf::int32 value) {
  set_has_message_id();
  message_id_ = value;
  // @@protoc_insertion_point(field_set:SystemCtrlMessagge.message_id)
}

// optional .SetTemperature msg_set_temperature = 2;
inline bool SystemCtrlMessagge::has_msg_set_temperature() const {
  return msg_body_case() == kMsgSetTemperature;
}
inline void SystemCtrlMessagge::set_has_msg_set_temperature() {
  _oneof_case_[0] = kMsgSetTemperature;
}
inline void SystemCtrlMessagge::clear_msg_set_temperature() {
  if (has_msg_set_temperature()) {
    delete msg_body_.msg_set_temperature_;
    clear_has_msg_body();
  }
}
inline  const ::SetTemperature& SystemCtrlMessagge::msg_set_temperature() const {
  // @@protoc_insertion_point(field_get:SystemCtrlMessagge.msg_set_temperature)
  return has_msg_set_temperature()
      ? *msg_body_.msg_set_temperature_
      : ::SetTemperature::default_instance();
}
inline ::SetTemperature* SystemCtrlMessagge::mutable_msg_set_temperature() {
  if (!has_msg_set_temperature()) {
    clear_msg_body();
    set_has_msg_set_temperature();
    msg_body_.msg_set_temperature_ = new ::SetTemperature;
  }
  // @@protoc_insertion_point(field_mutable:SystemCtrlMessagge.msg_set_temperature)
  return msg_body_.msg_set_temperature_;
}
inline ::SetTemperature* SystemCtrlMessagge::release_msg_set_temperature() {
  // @@protoc_insertion_point(field_release:SystemCtrlMessagge.msg_set_temperature)
  if (has_msg_set_temperature()) {
    clear_has_msg_body();
    ::SetTemperature* temp = msg_body_.msg_set_temperature_;
    msg_body_.msg_set_temperature_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SystemCtrlMessagge::set_allocated_msg_set_temperature(::SetTemperature* msg_set_temperature) {
  clear_msg_body();
  if (msg_set_temperature) {
    set_has_msg_set_temperature();
    msg_body_.msg_set_temperature_ = msg_set_temperature;
  }
  // @@protoc_insertion_point(field_set_allocated:SystemCtrlMessagge.msg_set_temperature)
}

// optional .SetTemperatureResult msg_set_temperature_result = 3;
inline bool SystemCtrlMessagge::has_msg_set_temperature_result() const {
  return msg_body_case() == kMsgSetTemperatureResult;
}
inline void SystemCtrlMessagge::set_has_msg_set_temperature_result() {
  _oneof_case_[0] = kMsgSetTemperatureResult;
}
inline void SystemCtrlMessagge::clear_msg_set_temperature_result() {
  if (has_msg_set_temperature_result()) {
    delete msg_body_.msg_set_temperature_result_;
    clear_has_msg_body();
  }
}
inline  const ::SetTemperatureResult& SystemCtrlMessagge::msg_set_temperature_result() const {
  // @@protoc_insertion_point(field_get:SystemCtrlMessagge.msg_set_temperature_result)
  return has_msg_set_temperature_result()
      ? *msg_body_.msg_set_temperature_result_
      : ::SetTemperatureResult::default_instance();
}
inline ::SetTemperatureResult* SystemCtrlMessagge::mutable_msg_set_temperature_result() {
  if (!has_msg_set_temperature_result()) {
    clear_msg_body();
    set_has_msg_set_temperature_result();
    msg_body_.msg_set_temperature_result_ = new ::SetTemperatureResult;
  }
  // @@protoc_insertion_point(field_mutable:SystemCtrlMessagge.msg_set_temperature_result)
  return msg_body_.msg_set_temperature_result_;
}
inline ::SetTemperatureResult* SystemCtrlMessagge::release_msg_set_temperature_result() {
  // @@protoc_insertion_point(field_release:SystemCtrlMessagge.msg_set_temperature_result)
  if (has_msg_set_temperature_result()) {
    clear_has_msg_body();
    ::SetTemperatureResult* temp = msg_body_.msg_set_temperature_result_;
    msg_body_.msg_set_temperature_result_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SystemCtrlMessagge::set_allocated_msg_set_temperature_result(::SetTemperatureResult* msg_set_temperature_result) {
  clear_msg_body();
  if (msg_set_temperature_result) {
    set_has_msg_set_temperature_result();
    msg_body_.msg_set_temperature_result_ = msg_set_temperature_result;
  }
  // @@protoc_insertion_point(field_set_allocated:SystemCtrlMessagge.msg_set_temperature_result)
}

// optional .ShowTemperatureResult msg_show_temperature_result = 4;
inline bool SystemCtrlMessagge::has_msg_show_temperature_result() const {
  return msg_body_case() == kMsgShowTemperatureResult;
}
inline void SystemCtrlMessagge::set_has_msg_show_temperature_result() {
  _oneof_case_[0] = kMsgShowTemperatureResult;
}
inline void SystemCtrlMessagge::clear_msg_show_temperature_result() {
  if (has_msg_show_temperature_result()) {
    delete msg_body_.msg_show_temperature_result_;
    clear_has_msg_body();
  }
}
inline  const ::ShowTemperatureResult& SystemCtrlMessagge::msg_show_temperature_result() const {
  // @@protoc_insertion_point(field_get:SystemCtrlMessagge.msg_show_temperature_result)
  return has_msg_show_temperature_result()
      ? *msg_body_.msg_show_temperature_result_
      : ::ShowTemperatureResult::default_instance();
}
inline ::ShowTemperatureResult* SystemCtrlMessagge::mutable_msg_show_temperature_result() {
  if (!has_msg_show_temperature_result()) {
    clear_msg_body();
    set_has_msg_show_temperature_result();
    msg_body_.msg_show_temperature_result_ = new ::ShowTemperatureResult;
  }
  // @@protoc_insertion_point(field_mutable:SystemCtrlMessagge.msg_show_temperature_result)
  return msg_body_.msg_show_temperature_result_;
}
inline ::ShowTemperatureResult* SystemCtrlMessagge::release_msg_show_temperature_result() {
  // @@protoc_insertion_point(field_release:SystemCtrlMessagge.msg_show_temperature_result)
  if (has_msg_show_temperature_result()) {
    clear_has_msg_body();
    ::ShowTemperatureResult* temp = msg_body_.msg_show_temperature_result_;
    msg_body_.msg_show_temperature_result_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SystemCtrlMessagge::set_allocated_msg_show_temperature_result(::ShowTemperatureResult* msg_show_temperature_result) {
  clear_msg_body();
  if (msg_show_temperature_result) {
    set_has_msg_show_temperature_result();
    msg_body_.msg_show_temperature_result_ = msg_show_temperature_result;
  }
  // @@protoc_insertion_point(field_set_allocated:SystemCtrlMessagge.msg_show_temperature_result)
}

// optional .PowerOffResult msg_power_off_result = 5;
inline bool SystemCtrlMessagge::has_msg_power_off_result() const {
  return msg_body_case() == kMsgPowerOffResult;
}
inline void SystemCtrlMessagge::set_has_msg_power_off_result() {
  _oneof_case_[0] = kMsgPowerOffResult;
}
inline void SystemCtrlMessagge::clear_msg_power_off_result() {
  if (has_msg_power_off_result()) {
    delete msg_body_.msg_power_off_result_;
    clear_has_msg_body();
  }
}
inline  const ::PowerOffResult& SystemCtrlMessagge::msg_power_off_result() const {
  // @@protoc_insertion_point(field_get:SystemCtrlMessagge.msg_power_off_result)
  return has_msg_power_off_result()
      ? *msg_body_.msg_power_off_result_
      : ::PowerOffResult::default_instance();
}
inline ::PowerOffResult* SystemCtrlMessagge::mutable_msg_power_off_result() {
  if (!has_msg_power_off_result()) {
    clear_msg_body();
    set_has_msg_power_off_result();
    msg_body_.msg_power_off_result_ = new ::PowerOffResult;
  }
  // @@protoc_insertion_point(field_mutable:SystemCtrlMessagge.msg_power_off_result)
  return msg_body_.msg_power_off_result_;
}
inline ::PowerOffResult* SystemCtrlMessagge::release_msg_power_off_result() {
  // @@protoc_insertion_point(field_release:SystemCtrlMessagge.msg_power_off_result)
  if (has_msg_power_off_result()) {
    clear_has_msg_body();
    ::PowerOffResult* temp = msg_body_.msg_power_off_result_;
    msg_body_.msg_power_off_result_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SystemCtrlMessagge::set_allocated_msg_power_off_result(::PowerOffResult* msg_power_off_result) {
  clear_msg_body();
  if (msg_power_off_result) {
    set_has_msg_power_off_result();
    msg_body_.msg_power_off_result_ = msg_power_off_result;
  }
  // @@protoc_insertion_point(field_set_allocated:SystemCtrlMessagge.msg_power_off_result)
}

// optional .TurnOffDisplayResult msg_turn_off_display_result = 6;
inline bool SystemCtrlMessagge::has_msg_turn_off_display_result() const {
  return msg_body_case() == kMsgTurnOffDisplayResult;
}
inline void SystemCtrlMessagge::set_has_msg_turn_off_display_result() {
  _oneof_case_[0] = kMsgTurnOffDisplayResult;
}
inline void SystemCtrlMessagge::clear_msg_turn_off_display_result() {
  if (has_msg_turn_off_display_result()) {
    delete msg_body_.msg_turn_off_display_result_;
    clear_has_msg_body();
  }
}
inline  const ::TurnOffDisplayResult& SystemCtrlMessagge::msg_turn_off_display_result() const {
  // @@protoc_insertion_point(field_get:SystemCtrlMessagge.msg_turn_off_display_result)
  return has_msg_turn_off_display_result()
      ? *msg_body_.msg_turn_off_display_result_
      : ::TurnOffDisplayResult::default_instance();
}
inline ::TurnOffDisplayResult* SystemCtrlMessagge::mutable_msg_turn_off_display_result() {
  if (!has_msg_turn_off_display_result()) {
    clear_msg_body();
    set_has_msg_turn_off_display_result();
    msg_body_.msg_turn_off_display_result_ = new ::TurnOffDisplayResult;
  }
  // @@protoc_insertion_point(field_mutable:SystemCtrlMessagge.msg_turn_off_display_result)
  return msg_body_.msg_turn_off_display_result_;
}
inline ::TurnOffDisplayResult* SystemCtrlMessagge::release_msg_turn_off_display_result() {
  // @@protoc_insertion_point(field_release:SystemCtrlMessagge.msg_turn_off_display_result)
  if (has_msg_turn_off_display_result()) {
    clear_has_msg_body();
    ::TurnOffDisplayResult* temp = msg_body_.msg_turn_off_display_result_;
    msg_body_.msg_turn_off_display_result_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SystemCtrlMessagge::set_allocated_msg_turn_off_display_result(::TurnOffDisplayResult* msg_turn_off_display_result) {
  clear_msg_body();
  if (msg_turn_off_display_result) {
    set_has_msg_turn_off_display_result();
    msg_body_.msg_turn_off_display_result_ = msg_turn_off_display_result;
  }
  // @@protoc_insertion_point(field_set_allocated:SystemCtrlMessagge.msg_turn_off_display_result)
}

// optional .PowerOnResult msg_power_on_result = 7;
inline bool SystemCtrlMessagge::has_msg_power_on_result() const {
  return msg_body_case() == kMsgPowerOnResult;
}
inline void SystemCtrlMessagge::set_has_msg_power_on_result() {
  _oneof_case_[0] = kMsgPowerOnResult;
}
inline void SystemCtrlMessagge::clear_msg_power_on_result() {
  if (has_msg_power_on_result()) {
    delete msg_body_.msg_power_on_result_;
    clear_has_msg_body();
  }
}
inline  const ::PowerOnResult& SystemCtrlMessagge::msg_power_on_result() const {
  // @@protoc_insertion_point(field_get:SystemCtrlMessagge.msg_power_on_result)
  return has_msg_power_on_result()
      ? *msg_body_.msg_power_on_result_
      : ::PowerOnResult::default_instance();
}
inline ::PowerOnResult* SystemCtrlMessagge::mutable_msg_power_on_result() {
  if (!has_msg_power_on_result()) {
    clear_msg_body();
    set_has_msg_power_on_result();
    msg_body_.msg_power_on_result_ = new ::PowerOnResult;
  }
  // @@protoc_insertion_point(field_mutable:SystemCtrlMessagge.msg_power_on_result)
  return msg_body_.msg_power_on_result_;
}
inline ::PowerOnResult* SystemCtrlMessagge::release_msg_power_on_result() {
  // @@protoc_insertion_point(field_release:SystemCtrlMessagge.msg_power_on_result)
  if (has_msg_power_on_result()) {
    clear_has_msg_body();
    ::PowerOnResult* temp = msg_body_.msg_power_on_result_;
    msg_body_.msg_power_on_result_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SystemCtrlMessagge::set_allocated_msg_power_on_result(::PowerOnResult* msg_power_on_result) {
  clear_msg_body();
  if (msg_power_on_result) {
    set_has_msg_power_on_result();
    msg_body_.msg_power_on_result_ = msg_power_on_result;
  }
  // @@protoc_insertion_point(field_set_allocated:SystemCtrlMessagge.msg_power_on_result)
}

inline bool SystemCtrlMessagge::has_msg_body() const {
  return msg_body_case() != MSG_BODY_NOT_SET;
}
inline void SystemCtrlMessagge::clear_has_msg_body() {
  _oneof_case_[0] = MSG_BODY_NOT_SET;
}
inline SystemCtrlMessagge::MsgBodyCase SystemCtrlMessagge::msg_body_case() const {
  return SystemCtrlMessagge::MsgBodyCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::SetTemperatureResult_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::SetTemperatureResult_Result>() {
  return ::SetTemperatureResult_Result_descriptor();
}
template <> struct is_proto_enum< ::ShowTemperatureResult_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ShowTemperatureResult_Result>() {
  return ::ShowTemperatureResult_Result_descriptor();
}
template <> struct is_proto_enum< ::PowerOffResult_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PowerOffResult_Result>() {
  return ::PowerOffResult_Result_descriptor();
}
template <> struct is_proto_enum< ::TurnOffDisplayResult_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TurnOffDisplayResult_Result>() {
  return ::TurnOffDisplayResult_Result_descriptor();
}
template <> struct is_proto_enum< ::PowerOnResult_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PowerOnResult_Result>() {
  return ::PowerOnResult_Result_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SystemCtrlMessageDef_2eproto__INCLUDED
