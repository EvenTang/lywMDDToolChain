<%
states = module_stm.states
events = module_stm.events
module_name = module_stm.module_name 
%>#include "<%= module_name %>_STM.h"

<%
states.each do |state|
    events.each do |event| %>
/* @brief Event callback of <%= module_name %> Module
 *        status : <%= state %>
 *        event  : <%= event.name %>
 *        reference sequence id list:
 *               xxxx
 *               yyyy
 * 
 * @param _msg : <%= module_name %>Event
 * @return STM_Status
 */
STM_Status <%= module_name %>_ECB_<%= state %>_<%= event.name %>(<%= module_name %>Event const & _msg) {
    assert(_msg.has_msg_<%= event.name.underscore %>());
    <%= event.name %> * p_msg_body = _msg.get_msg_<%= event.name.underscore %>();
    assert(p_msg_body != nullptr);

    //> implementation of <%= state %> <%= event.name %>
    <% module_stm.get_ecb_logic_code(state, event.name)&.flatten&.each do |st| %>
    <%= st %><%
    end %>

    return STM_STATS_OK;
}
<%  
    end
end %>